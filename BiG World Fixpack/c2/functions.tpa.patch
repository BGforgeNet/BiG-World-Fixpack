--- c2/lib/functions.tpa	1970-01-01 01:00:00.000000000 +0100
+++ Fixpack/c2/lib/functions.tpa	2017-02-01 23:59:04.000000000 +0100
@@ -0,0 +1,102 @@
+// Available usability patterns
+OUTER_TEXT_SPRINT regexpUsable_EN ~^.*[Uu]sable by ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_DE ~^.*[Vv]erwendet werden von ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_ES ~^.*[Pp]uede usar ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_FR ~^.*[Uu]tilisable par ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_KO ~^.*사용\( *불가\)? ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_PL ~^.*[Mm]oże używać ?:\(.*\|[%WNL%]*\)*~
+OUTER_TEXT_SPRINT regexpUsable_RU ~^.*[Ии]спользуется ?:\(.*\|[%WNL%]*\)*~
+
+
+/**
+ * Attempts to remove usability section from the specified (item description) string.
+ * 
+ * INT_VAR autodetect Set to nonzero to update string only if an Enhanced Edition game is detected.
+ *                    (Default: 1)
+ * STR_VAR desc       Text that should be updated. Can be either a literal string, tra reference (@1234) 
+ *                    or strref value (#1234).
+ * STR_VAR title      The item name to remove from the top of description text (if any).
+ * STR_VAR regexp     The regular expression used to match the string section that will be removed.
+ *                    Use one of the predefined regexp definitions for best results.
+ * RET updated_desc   The updated string. Returns an empty string on error.
+ */
+DEFINE_PATCH_FUNCTION ITEM_DESC_TO_EE
+INT_VAR
+  autodetect  = 1
+STR_VAR
+  desc    = ~~
+  title   = ~~
+  regexp  = ~~
+RET
+  updated_desc
+BEGIN
+  TEXT_SPRINT updated_desc ~~
+
+  // resolving string references
+  LPF GET_STRING_REFERENCE STR_VAR refString = EVAL ~%desc%~ RET string END
+  TEXT_SPRINT desc ~%string%~
+  LPF GET_STRING_REFERENCE STR_VAR refString = EVAL ~%title%~ RET string END
+  TEXT_SPRINT title ~%string%~
+  LPF ESCAPE_REGEXP STR_VAR string = EVAL ~%title%~ RET result END
+  TEXT_SPRINT title ~%result%~
+
+  PATCH_IF (NOT autodetect OR GAME_IS ~bgee bg2ee eet~) BEGIN
+    INNER_PATCH_SAVE updated_desc ~%desc%~ BEGIN
+      PATCH_IF (NOT ~%title%~ STRING_EQUAL ~~) BEGIN
+        REPLACE_TEXTUALLY ~^[ %TAB%]*%title%[ %TAB%]*[%WNL%]+~ ~~
+      END
+      REPLACE_TEXTUALLY ~%regexp%~ ~~
+    END
+  END ELSE BEGIN
+    TEXT_SPRINT updated_desc ~%desc%~
+  END
+END
+
+
+// Internally used to resolve string references into literal strings
+DEFINE_PATCH_FUNCTION GET_STRING_REFERENCE
+STR_VAR refString = ~~
+RET string
+BEGIN
+  TEXT_SPRINT string ~~
+
+  PATCH_IF (~%refString%~ STRING_MATCHES_REGEXP ~[@#]-?[0-9]+~ != 0) BEGIN
+    PATCH_IF (~%refString%~ STRING_CONTAINS_REGEXP ~"~ != 0) BEGIN
+      TEXT_SPRINT refString ~"%refString%"~
+    END ELSE PATCH_IF (~%refString%~ STRING_CONTAINS_REGEXP "~" != 0) BEGIN
+      TEXT_SPRINT refString "~%refString%~"
+    END ELSE BEGIN
+      TEXT_SPRINT refString "~~~~~%refString%~~~~~"
+    END
+  END
+
+  INNER_ACTION BEGIN
+    <<<<<<<< .../inlined/a7_get_string.tpp
+      SPRINT resolved 
+    >>>>>>>>
+    SILENT
+    COPY - ~.../inlined/a7_get_string.tpp~ ~.../inlined/a7_get_string.tpp~
+      INSERT_BYTES SOURCE_SIZE (STRING_LENGTH ~%refString%~)
+      WRITE_ASCIIE SOURCE_SIZE ~%refString%~
+    VERBOSE
+  END
+
+  PATCH_REINCLUDE ~.../inlined/a7_get_string.tpp~
+
+  TEXT_SPRINT string ~%resolved%~
+END
+
+
+// Makes sure that the given string does not contain any special regular expression characters
+DEFINE_PATCH_FUNCTION ESCAPE_REGEXP
+STR_VAR string = ~~
+RET result
+BEGIN
+  INNER_PATCH_SAVE result ~%string%~ BEGIN
+    REPLACE_TEXTUALLY EXACT_MATCH ~?~ ~\?~
+    REPLACE_TEXTUALLY EXACT_MATCH ~*~ ~\*~
+    REPLACE_TEXTUALLY EXACT_MATCH ~+~ ~\+~
+    REPLACE_TEXTUALLY EXACT_MATCH ~[~ ~\[~
+    REPLACE_TEXTUALLY EXACT_MATCH ~]~ ~\]~
+  END
+END
